name: Deploy Android Testing

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
    conditions:
      - merged

env:
  APP_CENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN}}
  APP_NAME: ${{ 'Dhawal Raturi/APP_THIS' }}
  UPLOAD_FILE: ${{ 'apps/expo/android/app/build/outputs/apk/release/app-release.apk' }}
  TESTING_GROUP: ${{ 'TESTING' }}
jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.17.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Install dependencies
        run: yarn && ls

      #   - name: Cache Gradle Wrapper
      #     uses: actions/cache@v2
      #     with:
      #       path: ~/.gradle/wrapper
      #       key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      #   - name: Cache Gradle Dependencies
      #     uses: actions/cache@v2
      #     with:
      #       path: ~/.gradle/caches
      #       key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      #       restore-keys: |
      #         ${{ runner.os }}-gradle-caches-

      - name: Build android version
        run: |
          ls
          cd apps
          ls 
          cd expo 
          ls 
          cd android 
          ls && chmod +x ./gradlew && ./gradlew assembleRelease --no-daemon

      - name: Check if app-release.apk build is actually present
        run: cd app/build/outputs/apk/release/ && ls
        working-directory: apps/expo/android

      - name: Sign Testing APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/expo/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ env.SIGNING_KEY_BASE64 }}
          alias: ${{ env.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ env.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ env.SIGNING_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Signed App Bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Upload to App Center
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: ${{ env.APP_CENTER_TOKEN }}
          token: ${{ env.APP_CENTER_TOKEN }}
          group: ${{ env.TESTING_GROUP }}
          #   file: ${{ env.UPLOAD_FILE }}
          file: ${{steps.sign_app.outputs.signedReleaseFile}}
          notifyTesters: true
          debug: false
